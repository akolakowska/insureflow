name: Build and deploy Next.js app to Azure Web App - insureflow-dashboard-app

on:
  push:
    branches:
      - feature/insureflow_frontend_azure
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app (standalone)
        run: npm run build

      - name: Prepare deployment package
        run: |
          # Create a clean deployment directory
          mkdir -p deploy
          
          # Backup the original server.js
          cp .next/standalone/server.js .next/standalone/original-server.js
          
          # Create a custom server.js that ensures proper paths
          cat > .next/standalone/server.js << 'EOL'
          // Ensure proper environment
          process.env.NODE_ENV = 'production';
          
          // Log startup info
          console.log('Starting Next.js in production mode');
          console.log('Current directory:', process.cwd());
          
          // Load the original server with proper path handling
          require('./original-server.js');
          EOL
          
          # Copy the modified standalone directory
          cp -r .next/standalone/* deploy/
          
          # Create proper .next directory structure in deploy
          mkdir -p deploy/.next/static
          cp -r .next/static/* deploy/.next/static/
          
          # Ensure public assets are copied
          cp -r public deploy/
          
          # Add essential Next.js files
          cp .next/BUILD_ID deploy/.next/
          
          # List deployment contents for debugging
          echo "Deployment structure:"
          find deploy -type d | sort

      - name: Zip deployment package
        run: |
          cd deploy
          zip -r ../release.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          include-hidden-files: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip deployment package
        run: unzip release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'insureflow-dashboard-app'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7E95D2038D794DFEB25E3F14A04E81B2 }}
